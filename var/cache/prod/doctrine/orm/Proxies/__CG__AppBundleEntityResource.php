<?php

namespace Proxies\__CG__\AppBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Resource extends \AppBundle\Entity\Resource implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', 'id', 'jobId', 'createdAt', 'jobType', 'tymezone', 'budget', 'candidates', 'url', 'pastHires', 'skills', 'verifStatus', 'totalCharge', 'workload', 'prefLocation', 'english', 'feedback', 'totalHours', 'memberSince', 'level', 'interviewees', 'avgRate', 'rating', 'description', 'title', 'country', 'category', 'subcategory', 'clientPreferredHoursOfExperience', 'filterStars'];
        }

        return ['__isInitialized__', 'id', 'jobId', 'createdAt', 'jobType', 'tymezone', 'budget', 'candidates', 'url', 'pastHires', 'skills', 'verifStatus', 'totalCharge', 'workload', 'prefLocation', 'english', 'feedback', 'totalHours', 'memberSince', 'level', 'interviewees', 'avgRate', 'rating', 'description', 'title', 'country', 'category', 'subcategory', 'clientPreferredHoursOfExperience', 'filterStars'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Resource $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getClientPreferredHoursOfExperience()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getClientPreferredHoursOfExperience', []);

        return parent::getClientPreferredHoursOfExperience();
    }

    /**
     * {@inheritDoc}
     */
    public function setClientPreferredHoursOfExperience($clientPreferredHoursOfExperience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setClientPreferredHoursOfExperience', [$clientPreferredHoursOfExperience]);

        return parent::setClientPreferredHoursOfExperience($clientPreferredHoursOfExperience);
    }

    /**
     * {@inheritDoc}
     */
    public function getSubcategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubcategory', []);

        return parent::getSubcategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setSubcategory($subcategory)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSubcategory', [$subcategory]);

        return parent::setSubcategory($subcategory);
    }

    /**
     * {@inheritDoc}
     */
    public function getCategory()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCategory', []);

        return parent::getCategory();
    }

    /**
     * {@inheritDoc}
     */
    public function setCategory($category)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCategory', [$category]);

        return parent::setCategory($category);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobType($jobType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobType', [$jobType]);

        return parent::setJobType($jobType);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobType', []);

        return parent::getJobType();
    }

    /**
     * {@inheritDoc}
     */
    public function setTymezone($tymezone)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTymezone', [$tymezone]);

        return parent::setTymezone($tymezone);
    }

    /**
     * {@inheritDoc}
     */
    public function getTymezone()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTymezone', []);

        return parent::getTymezone();
    }

    /**
     * {@inheritDoc}
     */
    public function setBudget($budget)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBudget', [$budget]);

        return parent::setBudget($budget);
    }

    /**
     * {@inheritDoc}
     */
    public function getBudget()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBudget', []);

        return parent::getBudget();
    }

    /**
     * {@inheritDoc}
     */
    public function setCandidates($candidates)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCandidates', [$candidates]);

        return parent::setCandidates($candidates);
    }

    /**
     * {@inheritDoc}
     */
    public function getCandidates()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCandidates', []);

        return parent::getCandidates();
    }

    /**
     * {@inheritDoc}
     */
    public function setUrl($url)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUrl', [$url]);

        return parent::setUrl($url);
    }

    /**
     * {@inheritDoc}
     */
    public function getUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUrl', []);

        return parent::getUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setPastHires($pastHires)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPastHires', [$pastHires]);

        return parent::setPastHires($pastHires);
    }

    /**
     * {@inheritDoc}
     */
    public function getPastHires()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPastHires', []);

        return parent::getPastHires();
    }

    /**
     * {@inheritDoc}
     */
    public function setSkills($skills)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSkills', [$skills]);

        return parent::setSkills($skills);
    }

    /**
     * {@inheritDoc}
     */
    public function getSkills()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSkills', []);

        return parent::getSkills();
    }

    /**
     * {@inheritDoc}
     */
    public function setVerifStatus($verifStatus)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setVerifStatus', [$verifStatus]);

        return parent::setVerifStatus($verifStatus);
    }

    /**
     * {@inheritDoc}
     */
    public function getVerifStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getVerifStatus', []);

        return parent::getVerifStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalCharge($totalCharge)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalCharge', [$totalCharge]);

        return parent::setTotalCharge($totalCharge);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalCharge()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalCharge', []);

        return parent::getTotalCharge();
    }

    /**
     * {@inheritDoc}
     */
    public function setWorkload($workload)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setWorkload', [$workload]);

        return parent::setWorkload($workload);
    }

    /**
     * {@inheritDoc}
     */
    public function getWorkload()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getWorkload', []);

        return parent::getWorkload();
    }

    /**
     * {@inheritDoc}
     */
    public function setPrefLocation($prefLocation)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPrefLocation', [$prefLocation]);

        return parent::setPrefLocation($prefLocation);
    }

    /**
     * {@inheritDoc}
     */
    public function getPrefLocation()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPrefLocation', []);

        return parent::getPrefLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnglish($english)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnglish', [$english]);

        return parent::setEnglish($english);
    }

    /**
     * {@inheritDoc}
     */
    public function getEnglish()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnglish', []);

        return parent::getEnglish();
    }

    /**
     * {@inheritDoc}
     */
    public function setFeedback($feedback)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFeedback', [$feedback]);

        return parent::setFeedback($feedback);
    }

    /**
     * {@inheritDoc}
     */
    public function getFeedback()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFeedback', []);

        return parent::getFeedback();
    }

    /**
     * {@inheritDoc}
     */
    public function setTotalHours($totalHours)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTotalHours', [$totalHours]);

        return parent::setTotalHours($totalHours);
    }

    /**
     * {@inheritDoc}
     */
    public function getTotalHours()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTotalHours', []);

        return parent::getTotalHours();
    }

    /**
     * {@inheritDoc}
     */
    public function setMemberSince($memberSince)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMemberSince', [$memberSince]);

        return parent::setMemberSince($memberSince);
    }

    /**
     * {@inheritDoc}
     */
    public function getMemberSince()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMemberSince', []);

        return parent::getMemberSince();
    }

    /**
     * {@inheritDoc}
     */
    public function setLevel($level)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLevel', [$level]);

        return parent::setLevel($level);
    }

    /**
     * {@inheritDoc}
     */
    public function getLevel()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLevel', []);

        return parent::getLevel();
    }

    /**
     * {@inheritDoc}
     */
    public function setInterviewees($interviewees)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setInterviewees', [$interviewees]);

        return parent::setInterviewees($interviewees);
    }

    /**
     * {@inheritDoc}
     */
    public function getInterviewees()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getInterviewees', []);

        return parent::getInterviewees();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvgRate($avgRate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvgRate', [$avgRate]);

        return parent::setAvgRate($avgRate);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvgRate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvgRate', []);

        return parent::getAvgRate();
    }

    /**
     * {@inheritDoc}
     */
    public function setRating($rating)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRating', [$rating]);

        return parent::setRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function getRating()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRating', []);

        return parent::getRating();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', [$description]);

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', []);

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', [$title]);

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', []);

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', [$country]);

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', []);

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setJobId($jobId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setJobId', [$jobId]);

        return parent::setJobId($jobId);
    }

    /**
     * {@inheritDoc}
     */
    public function getJobId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getJobId', []);

        return parent::getJobId();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedAt($createdAt)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedAt', [$createdAt]);

        return parent::setCreatedAt($createdAt);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getFilterStars()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilterStars', []);

        return parent::getFilterStars();
    }

    /**
     * {@inheritDoc}
     */
    public function setFilterStars($filterStars)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFilterStars', [$filterStars]);

        return parent::setFilterStars($filterStars);
    }

}
